FROM lukemathwalker/cargo-chef:0.1.39-rust-latest AS chef
WORKDIR /crud

FROM chef AS planner
COPY . .
RUN cargo chef prepare --bin services/crud --recipe-path recipe.json

FROM chef AS cacher 
COPY --from=planner /crud/recipe.json recipe.json
# Build dependencies - this is the caching Docker layer!
RUN cargo chef cook --release --bin crud --recipe-path recipe.json

FROM chef as builder
# Build crudlication
COPY --from=cacher /crud/target target
COPY --from=cacher $CARGO_HOME $CARGO_HOME
COPY . .
RUN cargo build --release -p crud

# We do not need the Rust toolchain to run the binary! r
FROM debian:bullseye-slim AS runtime
WORKDIR /crud
RUN apt-get update && apt-get --no-cache install libpq5 libc-compat openssl -y
COPY --from=builder /crud/target/release/crud /usr/local/bin

EXPOSE 8080
ENTRYPOINT ["/usr/local/bin/crud"]