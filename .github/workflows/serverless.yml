name: Serverless CI/CD

on:
  push:
    branches:
      - main

concurrency:
  group: serverless-ci-cd-${{ github.ref }}
  cancel-in-progress: true

jobs:
  instance-deploy-changes:
    uses: ./.github/workflows/changes.yml
    with:
      path: services/serverless/instance-deploy/**

  instance-deploy-deploy:
    runs-on: ubuntu-latest
    needs: [instance-deploy-changes]
    if: needs.instance-deploy-changes.outputs.changed == 'true'
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/build-serverless
        with:
          package: "instance-deploy"
          access-key: ${{ secrets.DEPLOY_ACCESS_KEY }}
          secret-key: ${{ secrets.DEPLOY_SECRET_ACCESS_KEY }}
      - name: Publish New Versions
        run: |
          aws lambda update-function-code --function-name "central-instance-deploy" --zip-file fileb://target/lambda/deploy/bootstrap.zip --publish --region us-east-1
          aws lambda update-function-code --function-name "central-instance-config" --zip-file fileb://target/lambda/config/bootstrap.zip --publish --region us-east-1
          aws lambda update-function-code --function-name "central-instance-fail" --zip-file fileb://target/lambda/fail/bootstrap.zip --publish --region us-east-1

  app-update-changes:
    uses: ./.github/workflows/changes.yml
    with:
      path: services/serverless/app-update/**

  app-update-deploy:
    runs-on: ubuntu-latest
    needs: [app-update-changes]
    if: needs.app-update-changes.outputs.changed == 'true'
    steps:
      - uses: actions/checkout@v3
      - name: Build Function
        uses: ./.github/build-serverless
        with:
          package: "app-update"
          access-key: ${{ secrets.DEPLOY_ACCESS_KEY }}
          secret-key: ${{ secrets.DEPLOY_SECRET_ACCESS_KEY }}
      - name: Publish New Versions
        run: aws lambda update-function-code --function-name "app-update" --zip-file fileb://target/lambda/app-update/bootstrap.zip --publish --region us-east-1
