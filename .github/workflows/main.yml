name: Main CI/CD

on:
  push:
    branches:
      - main

concurrency:
  group: ci-cd-${{ github.ref }}
  cancel-in-progress: true

jobs:
  crud-changes:
    uses: ./.github/workflows/changes.yml
    with:
      path: services/crud/**

  crud-ci:
    uses: ./.github/workflows/crud-ci.yml

  push-crud:
    runs-on: ubuntu-latest
    needs: [crud-ci, crud-changes]
    if: needs.crud-changes.outputs.changed == 'true'
    steps:
      - uses: actions/checkout@v3
      - run: docker pull lukemathwalker/cargo-chef:0.1.39-rust-latest & docker pull debian:buster-slim
      - uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: central-crud-docker4-{hash}
          restore-keys: |
            central-crud-docker4-
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
      - name: Build Image
        run: docker build . -f ./services/crud/dockerfile -t central-crud:latest
      - name: Push to ECR
        uses: ./.github/push-image
        with:
          repo: central-crud
          access-key: ${{ secrets.ECR_ACCESS_KEY }}
          secret-key: ${{ secrets.ECR_SECRET_KEY }}

  gateway-changes:
    uses: ./.github/workflows/changes.yml
    with:
      path: services/gateway/**

  gateway-ci:
    uses: ./.github/workflows/gateway-ci.yml

  push-gateway:
    runs-on: ubuntu-latest
    needs: [gateway-ci, gateway-changes]
    if: needs.gateway-changes.outputs.changed == 'true'
    steps:
      - uses: actions/checkout@v3
      - run: docker pull lukemathwalker/cargo-chef:0.1.39-rust-latest & docker pull debian:buster-slim
      - uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: central-gateway-docker4-{hash}
          restore-keys: |
            central-gateway-docker4-
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
      - name: Build Image
        # label so we can remove all images except this one for caching
        run: docker build . -f ./services/gateway/dockerfile -t central-gateway:latest
      - name: Push to ECR
        uses: ./.github/push-image
        with:
          repo: central-gateway
          access-key: ${{ secrets.ECR_ACCESS_KEY }}
          secret-key: ${{ secrets.ECR_SECRET_KEY }}

  payments-changes:
    uses: ./.github/workflows/changes.yml
    with:
      path: services/payments/**

  payments-ci:
    uses: ./.github/workflows/payments-ci.yml

  push-payments:
    runs-on: ubuntu-latest
    needs: [payments-ci, payments-changes]
    if: needs.payments-changes.outputs.changed == 'true'
    steps:
      - uses: actions/checkout@v3
      - run: docker pull lukemathwalker/cargo-chef:0.1.39-rust-latest & docker pull debian:buster-slim
      - uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: central-payments-docker4-{hash}
          restore-keys: |
            central-payments-docker4-
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
      - name: Build Image
        run: docker build . -f ./services/payments/dockerfile -t central-payments:latest --label cache=true
      - name: Push to ECR
        uses: ./.github/push-image
        with:
          repo: central-payments
          access-key: ${{ secrets.ECR_ACCESS_KEY }}
          secret-key: ${{ secrets.ECR_SECRET_KEY }}

  dashboard-changes:
    uses: ./.github/workflows/changes.yml
    with:
      path: services/dashboard/**

  dashboard-ci:
    uses: ./.github/workflows/dashboard-ci.yml

  push-dashboard:
    runs-on: ubuntu-latest
    needs: [dashboard-ci, dashboard-changes]
    if: needs.dashboard-changes.outputs.changed == 'true'
    steps:
      - uses: actions/checkout@v3
      - run: docker pull node:16-alpine3.16
      - uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: central-dashboard-docker4-{hash}
          restore-keys: |
            central-dashboard-docker4-
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
      - name: Build Image
        run: docker build ./services/dashboard -t central-dashboard:latest --label cache=true
      - name: Push to ECR
        uses: ./.github/push-image
        with:
          repo: central-dashboard
          access-key: ${{ secrets.ECR_ACCESS_KEY }}
          secret-key: ${{ secrets.ECR_SECRET_KEY }}

  nginx-changes:
    uses: ./.github/workflows/changes.yml
    with:
      path: nginx/**

  push-nginx:
    runs-on: ubuntu-latest
    needs: [nginx-changes]
    if: needs.nginx-changes.outputs.changed == 'true'
    steps:
      - uses: actions/checkout@v3
      - run: docker pull nginx:1.23.1-alpine
      - uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: central-nginx-docker4-{hash}
          restore-keys: |
            central-nginx-docker4-
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
      - name: Build Image
        run: docker build ./nginx -t central-nginx:latest --label cache=true
      - name: Push to ECR
        uses: ./.github/push-image
        with:
          repo: central-nginx
          access-key: ${{ secrets.ECR_ACCESS_KEY }}
          secret-key: ${{ secrets.ECR_SECRET_KEY }}
          
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: [push-gateway, push-crud, push-payments, push-dashboard, push-nginx]
    if: ${{ !failure() && !cancelled() }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.DEPLOY_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.DEPLOY_SECRET_ACCESS_KEY }}
      - name: Install Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install EB CLI using pip
        run: |
          python -m pip install --upgrade pip
          pip install awsebcli
      - run: eb init "milkyweb-dashboard" --platform docker
      - run: eb config "Main-env"
      - name: Deploy to Elastic Beanstalk
        run: |
          eb deploy "Main-env" -l "${{ github.sha }}" -m "${{ github.event.head_commit.message }}" -p
